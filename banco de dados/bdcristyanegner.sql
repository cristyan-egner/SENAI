-- MySQL Script generated by MySQL Workbench
-- Tue Feb  4 15:54:28 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cliente` ;

CREATE TABLE IF NOT EXISTS `cliente` (
  `cod_cliente` INT NOT NULL COMMENT 'esse campo armazena o código do cliente',
  `nome_cliente` VARCHAR(50) NOT NULL COMMENT 'esse campo armazena o nome do cliente',
  `endereco` VARCHAR(50) NOT NULL COMMENT 'esse campo armazena o endereço do cliente',
  `cidade` VARCHAR(50) NOT NULL COMMENT 'esse campo armazena a cidade do cliente',
  `cep` VARCHAR(10) NOT NULL COMMENT 'esse campo armazena o cep do cliente',
  `uf` CHAR(2) NOT NULL COMMENT 'esse campo armazena a uf do cliente',
  `cnpj` VARCHAR(30) NOT NULL COMMENT 'esse campo armazena o cnpj do cliente',
  `ie` INT(10) NOT NULL COMMENT 'esse campo armazena o ie do cliente',
  PRIMARY KEY (`cod_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`vendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `vendedor` ;

CREATE TABLE IF NOT EXISTS `vendedor` (
  `cod_vendedor` INT NOT NULL COMMENT 'esse campo armazena o código do vendedor',
  `nome_vendedor` VARCHAR(50) NOT NULL COMMENT 'esse campo armazena o nome do vendedor',
  `sal_fixo` DECIMAL(15,2) NOT NULL COMMENT 'esse campo armazena o salário fixo do vendedor',
  `faixa_comissao` CHAR(2) NOT NULL COMMENT 'esse campo armazena a faixa de comissao do vendedor',
  PRIMARY KEY (`cod_vendedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pedido` ;

CREATE TABLE IF NOT EXISTS `pedido` (
  `num_pedido` INT NOT NULL COMMENT 'esse campo armazena o número do pedido',
  `prazo_entrega` INT(10) NOT NULL COMMENT 'esse campo armazena o prazo de entrega',
  `cliente_cod_cliente` INT NOT NULL COMMENT 'esse campo armazena o código do cliente',
  `vendedor_cod_vendedor` INT NOT NULL COMMENT 'esse campo armazena o código do vendedor',
  PRIMARY KEY (`num_pedido`, `cliente_cod_cliente`, `vendedor_cod_vendedor`),
  INDEX `fk_pedido_cliente1_idx` (`cliente_cod_cliente` ASC) VISIBLE,
  INDEX `fk_pedido_vendedor1_idx` (`vendedor_cod_vendedor` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_cliente1`
    FOREIGN KEY (`cliente_cod_cliente`)
    REFERENCES `mydb`.`cliente` (`cod_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_vendedor1`
    FOREIGN KEY (`vendedor_cod_vendedor`)
    REFERENCES `mydb`.`vendedor` (`cod_vendedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `produto` ;

CREATE TABLE IF NOT EXISTS `produto` (
  `cod_produto` INT NOT NULL COMMENT 'esse campo armazena o código do produto',
  `unid_produto` VARCHAR(10) NOT NULL COMMENT 'esse campo armazena a unidade do produto',
  `desc_produto` VARCHAR(50) NOT NULL COMMENT 'esse campo armazena a descrição do produto',
  `valor_unit` DECIMAL(15,2) NOT NULL COMMENT 'esse campo armazena o valor unitário do produto',
  PRIMARY KEY (`cod_produto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pedido_has_produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `mydb`.`pedido_has_produto` ;

CREATE TABLE IF NOT EXISTS `pedido_has_produto` (
  `pedido_num_pedido` INT NOT NULL,
  `produto_cod_produto` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`pedido_num_pedido`, `produto_cod_produto`),
  INDEX `fk_pedido_has_produto_produto1_idx` (`produto_cod_produto` ASC) VISIBLE,
  INDEX `fk_pedido_has_produto_pedido_idx` (`pedido_num_pedido` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_has_produto_pedido`
    FOREIGN KEY (`pedido_num_pedido`)
    REFERENCES `mydb`.`pedido` (`num_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_has_produto_produto1`
    FOREIGN KEY (`produto_cod_produto`)
    REFERENCES `mydb`.`produto` (`cod_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
